substitutions:
  name: "10-ch-monitor-v2"
  friendly_name: "10-ch-monitor-v2"
  ch1: "ch_1"   #可根据需要修改名称
  ch2: "ch_2"   #可根据需要修改名称
  ch3: "ch_3"    #可根据需要修改名称
  ch4: "ch_4"    #可根据需要修改名称
  ch5: "ch_5"  #可根据需要修改名称
  ch6: "ch_6"     #可根据需要修改名称
  ch7: "ch_7"     #可根据需要修改名称
  ch8: "ch_8"     #可根据需要修改名称
  ch9: "ch_9"     #可根据需要修改名称
  ch10: "ch_10"     #可根据需要修改名称

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  project:
    name: carrot8848.10-ch-monitor
    version: "1.0"
esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:
# Enable Home Assistant API
api:

ota:
  - platform: esphome
wifi:
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "10-Ch-Electricity-Monitor"
    password: ""

captive_portal:
globals:
  - id: ch1_energy_
    type: float
    restore_value: yes
  - id: ch1_energy_last  #energy from last power cycle
    type: float
    restore_value: yes
  - id: ch2_energy_
    type: float
    restore_value: yes
  - id: ch2_energy_last  #energy from last power cycle
    type: float
    restore_value: yes
  - id: ch3_energy_
    type: float
    restore_value: yes
  - id: ch3_energy_last  #energy from last power cycle
    type: float
    restore_value: yes
  - id: ch4_energy_
    type: float
    restore_value: yes
  - id: ch4_energy_last  #energy from last power cycle
    type: float
    restore_value: yes
  - id: ch5_energy_
    type: float
    restore_value: yes
  - id: ch5_energy_last  #energy from last power cycle
    type: float
    restore_value: yes
  - id: ch6_energy_
    type: float
    restore_value: yes
  - id: ch6_energy_last  #energy from last power cycle
    type: float
    restore_value: yes
  - id: ch7_energy_
    type: float
    restore_value: yes
  - id: ch7_energy_last  #energy from last power cycle
    type: float
    restore_value: yes
  - id: ch8_energy_
    type: float
    restore_value: yes
  - id: ch8_energy_last  #energy from last power cycle
    type: float
    restore_value: yes
  - id: ch9_energy_
    type: float
    restore_value: yes
  - id: ch9_energy_last  #energy from last power cycle
    type: float
    restore_value: yes
  - id: ch10_energy_
    type: float
    restore_value: yes
  - id: ch10_energy_last  #energy from last power cycle
    type: float
    restore_value: yes
  - id: chs10_energy_ 
    type: float
    restore_value: yes
  - id: chs10_energy_last   #energy from last power cycle
    type: float
    restore_value: yes
web_server:
  port: 80
external_components:
  - source:
      type: git
      url: https://github.com/carrot8848/ESPHome
      ref: main
  - source: github://dentra/esphome-components
status_led:
  pin: GPIO1
uart:
  - id: uart_bus
    rx_pin: 4
    tx_pin: 5
    baud_rate: 19200
  - id: uart_bus2
    rx_pin: 6
    tx_pin: 7
    baud_rate: 9600
modbus:
  - uart_id: uart_bus2
    id: mod_bus1

sensor:
  - platform: BL0910
    id: sensor_bl0910
    uart_id: uart_bus
    update_interval: never   
    Frequency:
      name: 'BL0910 Frequency'
    Temperature:
      name: 'BL0910 Temperature'
    Voltage:
      name: 'BL0910 Voltage'
    Current_1:
      name: "${ch1} current"    
    Current_2:
      name: "${ch2} current"    
    Current_3:
      name: "${ch3} current"    
    Current_4:
      name: "${ch4} current"    
    Current_5:
      name: "${ch5} current"    
    Current_6:
      name: "${ch6} current"  
    Current_7:
      name: "${ch7} current"
    Current_8:
      name: "${ch8} current"
    Current_9:
      name: "${ch9} current"
    Current_10:
      name: "${ch10} current"
    Power_1:
      name: "${ch1} power"
      filters:
#        - multiply: -1
    Power_2:
      name: "${ch2} power"
      filters:
#        - multiply: -1
    Power_3:
      name: "${ch3} power"
      filters:
#        - multiply: -1
    Power_4:
      name: "${ch4} power"
      filters:
#        - multiply: -1
    Power_5:
      name: "${ch5} power"
      filters:
#        - multiply: -1  
    Power_6:
      name: "${ch6} power"
      filters:
#        - multiply: -1
    Power_7:
      name: "${ch7} power"
      filters:
#        - multiply: -1
    Power_8:
      name: "${ch8} power"
      filters:
#        - multiply: -1
    Power_9:
      name: "${ch9} power"
      filters:
#        - multiply: -1
    Power_10:
      name: "${ch10} power"
      filters:
#        - multiply: -1
    Power_sum:
      name: "10-ch sum power"
      # filters:
      #   - multiply: -1
    Energy_1: 
      id: ch1_energy
      name: "${ch1} energy"
      internal: true
      on_value: 
        then:
          - if:
              condition:
                sensor.in_range: 
                  id: ch1_energy
                  above: 0.01
              then: 
                globals.set: 
                  id: ch1_energy_
                  value: !lambda return id(ch1_energy_last) + x;
              else:
                - globals.set: 
                    id: ch1_energy_last
                    value: !lambda return id(ch1_energy_);
    Energy_2: 
      id: ch2_energy
      name: "${ch2} energy"
      internal: true
      on_value: 
        then:
          - if:
              condition:
                sensor.in_range: 
                  id: ch2_energy
                  above: 0.01
              then: 
                globals.set: 
                  id: ch2_energy_
                  value: !lambda return id(ch2_energy_last) + x;
              else:
                - globals.set: 
                    id: ch2_energy_last
                    value: !lambda return id(ch2_energy_);
    Energy_3: 
      id: ch3_energy
      name: "${ch3} energy"
      internal: true
      on_value: 
        then:
          - if:
              condition:
                sensor.in_range: 
                  id: ch3_energy
                  above: 0.01
              then: 
                globals.set: 
                  id: ch3_energy_
                  value: !lambda return id(ch3_energy_last) + x;
              else:
                - globals.set: 
                    id: ch3_energy_last
                    value: !lambda return id(ch3_energy_);
    Energy_4: 
      id: ch4_energy
      name: "${ch4} energy"
      internal: true
      on_value: 
        then:
          - if:
              condition:
                sensor.in_range: 
                  id: ch4_energy
                  above: 0.01
              then: 
                globals.set: 
                  id: ch4_energy_
                  value: !lambda return id(ch4_energy_last) + x;
              else:
                - globals.set: 
                    id: ch4_energy_last
                    value: !lambda return id(ch4_energy_);
    Energy_5: 
      id: ch5_energy
      name: "${ch5} energy"
      internal: true
      on_value: 
        then:
          - if:
              condition:
                sensor.in_range: 
                  id: ch5_energy
                  above: 0.01
              then: 
                globals.set: 
                  id: ch5_energy_
                  value: !lambda return id(ch5_energy_last) + x;
              else:
                - globals.set: 
                    id: ch5_energy_last
                    value: !lambda return id(ch5_energy_);
    Energy_6: 
      id: ch6_energy
      name: "${ch6} energy" 
      internal: true
      on_value: 
        then:
          - if:
              condition:
                sensor.in_range: 
                  id: ch6_energy
                  above: 0.01
              then: 
                globals.set: 
                  id: ch6_energy_
                  value: !lambda return id(ch6_energy_last) + x;
              else:
                - globals.set: 
                    id: ch6_energy_last
                    value: !lambda return id(ch6_energy_);
    Energy_7: 
      id: ch7_energy
      name: "${ch7} energy" 
      internal: true
      on_value: 
        then:
          - if:
              condition:
                sensor.in_range: 
                  id: ch7_energy
                  above: 0.01
              then: 
                globals.set: 
                  id: ch7_energy_
                  value: !lambda return id(ch7_energy_last) + x;
              else:
                - globals.set: 
                    id: ch7_energy_last
                    value: !lambda return id(ch7_energy_);
    Energy_8: 
      id: ch8_energy
      name: "${ch8} energy" 
      internal: true
      on_value: 
        then:
          - if:
              condition:
                sensor.in_range: 
                  id: ch8_energy
                  above: 0.01
              then: 
                globals.set: 
                  id: ch8_energy_
                  value: !lambda return id(ch8_energy_last) + x;
              else:
                - globals.set: 
                    id: ch8_energy_last
                    value: !lambda return id(ch8_energy_);
    Energy_9: 
      id: ch9_energy
      name: "${ch9} energy" 
      internal: true
      on_value: 
        then:
          - if:
              condition:
                sensor.in_range: 
                  id: ch9_energy
                  above: 0.01
              then: 
                globals.set: 
                  id: ch9_energy_
                  value: !lambda return id(ch9_energy_last) + x;
              else:
                - globals.set: 
                    id: ch9_energy_last
                    value: !lambda return id(ch9_energy_);
    Energy_10: 
      id: ch10_energy
      name: "${ch10} energy" 
      internal: true
      on_value: 
        then:
          - if:
              condition:
                sensor.in_range: 
                  id: ch10_energy
                  above: 0.01
              then: 
                globals.set: 
                  id: ch10_energy_
                  value: !lambda return id(ch10_energy_last) + x;
              else:
                - globals.set: 
                    id: ch10_energy_last
                    value: !lambda return id(ch10_energy_);
    Energy_sum: 
      id: chs10_energy_sum
      name: "10-ch energy" 
      internal: true
      on_value: 
        then:
          - if:
              condition:
                sensor.in_range: 
                  id: chs10_energy_sum
                  above: 0.01
              then: 
                globals.set: 
                  id: chs10_energy_
                  value: !lambda return id(chs10_energy_last) + x;
              else:
                - globals.set: 
                    id: chs10_energy_last
                    value: !lambda return id(chs10_energy_);

  - platform: template
    name: "${ch1} Total Energy"
    id: ch1_total_energy
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    lambda: |-
      return id(ch1_energy_);
    update_interval: 10s
  - platform: template
    name: "${ch2} Total Energy"
    id: ch2_total_energy
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    lambda: |-
      return id(ch2_energy_);
    update_interval: 10s
  - platform: template
    name: "${ch3} Total Energy"
    id: ch3_total_energy
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    lambda: |-
      return id(ch3_energy_);
    update_interval: 10s
  - platform: template
    name: "${ch4} Total Energy"
    id: ch4_total_energy
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    lambda: |-
      return id(ch4_energy_);
    update_interval: 10s
  - platform: template
    name: "${ch5} Total Energy"
    id: ch5_total_energy
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    lambda: |-
      return id(ch5_energy_);
    update_interval: 10s
  - platform: template
    name: "${ch6} Total Energy"
    id: ch6_total_energy
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    lambda: |-
      return id(ch6_energy_);
    update_interval: 10s
  - platform: template
    name: "${ch7} Total Energy"
    id: ch7_total_energy
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    lambda: |-
      return id(ch7_energy_);
    update_interval: 10s
  - platform: template
    name: "${ch8} Total Energy"
    id: ch8_total_energy
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    lambda: |-
      return id(ch8_energy_);
    update_interval: 10s
  - platform: template
    name: "${ch9} Total Energy"
    id: ch9_total_energy
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    lambda: |-
      return id(ch9_energy_);
    update_interval: 10s
  - platform: template
    name: "${ch10} Total Energy"
    id: ch10_total_energy
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    lambda: |-
      return id(ch10_energy_);
    update_interval: 10s
  - platform: template
    name: "10 chs Total Energy"
    id: chs10_total_energy
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    lambda: |-
      return id(chs10_energy_);
    update_interval: 10s

  - platform: "energy_statistics"
    total: ch1_total_energy
    energy_today:
      name: "${ch1} energy_today"
    energy_yesterday:
      name: "${ch1} energy_yesterday"
    energy_week:
      name: "${ch1} energy_week"
    energy_month:
      name: "${ch1} energy_month"
  - platform: "energy_statistics"
    total: ch2_total_energy
    energy_today:
      name: "${ch2} energy_today"
    energy_yesterday:
      name: "${ch2} energy_yesterday"
    energy_week:
      name: "${ch2} energy_week"
    energy_month:
      name: "${ch2} energy_month"
  - platform: "energy_statistics"
    total: ch3_total_energy
    energy_today:
      name: "${ch3} energy_today"
    energy_yesterday:
      name: "${ch3} energy_yesterday"
    energy_week:
      name: "${ch3} energy_week"
    energy_month:
      name: "${ch3} energy_month"
  - platform: "energy_statistics"
    total: ch4_total_energy
    energy_today:
      name: "${ch4} energy_today"
    energy_yesterday:
      name: "${ch4} energy_yesterday"
    energy_week:
      name: "${ch4} energy_week"
    energy_month:
      name: "${ch4} energy_month"
  - platform: "energy_statistics"
    total: ch5_total_energy
    energy_today:
      name: "${ch5} energy_today"
    energy_yesterday:
      name: "${ch5} energy_yesterday"
    energy_week:
      name: "${ch5} energy_week"
    energy_month:
      name: "${ch5} energy_month"
  - platform: "energy_statistics"
    total: ch6_total_energy
    energy_today:
      name: "${ch6} energy_today"
    energy_yesterday:
      name: "${ch6} energy_yesterday"
    energy_week:
      name: "${ch6} energy_week"
    energy_month:
      name: "${ch6} energy_month"
  - platform: "energy_statistics"
    total: ch7_total_energy
    energy_today:
      name: "${ch7} energy_today"
    energy_yesterday:
      name: "${ch7} energy_yesterday"
    energy_week:
      name: "${ch7} energy_week"
    energy_month:
      name: "${ch7} energy_month"
  - platform: "energy_statistics"
    total: ch8_total_energy
    energy_today:
      name: "${ch8} energy_today"
    energy_yesterday:
      name: "${ch8} energy_yesterday"
    energy_week:
      name: "${ch8} energy_week"
    energy_month:
      name: "${ch8} energy_month"
  - platform: "energy_statistics"
    total: ch9_total_energy
    energy_today:
      name: "${ch9} energy_today"
    energy_yesterday:
      name: "${ch9} energy_yesterday"
    energy_week:
      name: "${ch9} energy_week"
    energy_month:
      name: "${ch9} energy_month"
  - platform: "energy_statistics"
    total: ch10_total_energy
    energy_today:
      name: "${ch10} energy_today"
    energy_yesterday:
      name: "${ch10} energy_yesterday"
    energy_week:
      name: "${ch10} energy_week"
    energy_month:
      name: "${ch10} energy_month"

  - platform: pzemac
    id: sensor_pzem
    modbus_id: mod_bus1
    update_interval: never
    current:
      name: "PZEM Current"
    voltage:
      name: "PZEM Voltage"
    energy:
      name: "PZEM Energy"
      id: energy
      filters:
        # Multiplication factor from Wh to kWh is 0.001
        - multiply: 0.001
      unit_of_measurement: kWh
    power:
      name: "PZEM Power"
      id: pzemac_power
      filters:
        # Multiplication factor from W to kW is 0.001
       - multiply: 0.001
      unit_of_measurement: kW
    frequency:
      name: "PZEM Frequency"
    power_factor:
      name: "PZEM Power Factor"

  - platform: "energy_statistics"
    total: energy
    energy_today:
      name: "PZEM Energy Today"
    energy_yesterday:
      name: "PZEM Energy Yesterday"
    energy_week:
      name: "PZEM Energy Week"
    energy_month:
      name: "PZEM Energy Month"

  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "Energy_meter WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "Energy_meter WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"

interval:
  - interval: 10s
    id: read_sensors
    then: 
      - component.update: sensor_bl0910
      - delay: 0.5s
      - component.update: sensor_pzem

switch:
  - platform: restart
    name: "${name} controller Restart"
  - platform: factory_reset
    name: Restart with Factory Default Settings
time:
  - platform: sntp
    id: my_time
    servers: 120.25.108.11
text_sensor:
  - platform: wifi_info
    ip_address:
      name: Energy_meter IP Address
    ssid:
      name: Energy_meter Connected SSID
    bssid:
      name: Energy_meter Connected BSSID
    mac_address:
      name: Energy_meter Mac Wifi Address
    # scan_results:
    #   name: Energy_meter Latest Scan Results
    dns_address:
      name: Energy_meter DNS Address 
