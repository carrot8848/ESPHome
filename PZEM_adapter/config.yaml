substitutions:
  name: "pzem-adapter"
  friendly_name: "PZEM电量适配器"
esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  project:
    name: carrot8848.pzem-adapter
    version: "1.0"

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  reboot_timeout: 0s
ota:
  - platform: esphome
wifi:
  ap:
    password: ""

captive_portal:
    
web_server:
  port: 80
external_components:
  - source: github://dentra/esphome-components
status_led:
  pin: 
    number: GPIO19
    inverted: True
uart:
  id: uart_bus
  rx_pin: GPIO5
  tx_pin: GPIO6
  baud_rate: 9600
  debug:
    direction: BOTH
    dummy_receiver: false
    after:
      delimiter: "\n"
    sequence:
      - lambda: UARTDebug::log_string(direction, bytes);
modbus:
  uart_id: uart_bus
  send_wait_time: 100ms
  id: mod_bus

sensor: 
  - platform: pzemac
    current:
      name: "total_current"
    voltage:
      name: "ac_voltage"
    energy:
      name: "total_energy"
      id: energy
      filters:
        # Multiplication factor from Wh to kWh is 0.001
        - multiply: 0.001
      unit_of_measurement: kWh
    power:
      name: "total_power"
      id: pzemac_power
   #   filters:
        # Multiplication factor from W to kW is 0.001
    #    - multiply: 0.001
    #  unit_of_measurement: kW
    frequency:
      name: "ac_frequency"
    power_factor:
      name: "ac_power_factor"
    update_interval: 10s
    modbus_id: mod_bus

  - platform: "energy_statistics"
    total: energy
    energy_today:
      name: "energy_today"
    energy_yesterday:
      name: "energy_yesterday"
    energy_week:
      name: "energy_week"
    energy_month:
      name: "energy_month"

  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "${name} WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "${name} WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"

time:
  - platform: sntp
    id: my_time
    servers: 120.25.108.11

text_sensor:
  - platform: wifi_info
    ip_address:
      name: ${name} IP Address
    ssid:
      name: ${name} Connected SSID
    bssid:
      name: ${name} Connected BSSID
    mac_address:
      name: ${name} Mac Wifi Address
    # scan_results:
    #   name: ${name} Latest Scan Results
    dns_address:
      name: ${name} DNS Address
button:
  - platform: factory_reset
    name: ${name} Reset to Factory Default Settings
  - platform: restart
    name: "${name} Restart"
